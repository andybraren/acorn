Title: Acorn Documentation
----
Datedata: 2016-11-03 12:00:00, 2016-11-03 12:00:00 == abraren, 2016-11-03 12:00:00, 2016-11-03 15:00:00, 2016-11-03 16:00:00
----
Userdata: abraren
----
Reldata: 
----
Settings: public, blue, comments == off, submissions == off, price == off, equipmentstatus == available
----
Hero: 
----
Text: 

The Maker Network is a website platform that helps communities collect, organize, and connect all of their making-related spaces, events, groups, projects, and resources. It includes many of the features that new community makerspaces need, and integrates directly with Brian O'Connell's [RFID Network](https://github.com/JumbosMakerNetwork/RFID_Network) to make managing a makerspace easier.

This platform is actively being developed by Andy Braren (hi!), and has a sizable roadmap ahead. Your feedback and/or code contributions are appreciated.

<!--If you're a library, school, or community member that would like to adapt this site for your own makerspace - go for it. Unfortunately I can't commit to offering a lot of support, but feel free to shoot an email.-->

(callout: warning text: The Maker Network platform is still a work in progress with many known bugs. The documentation below, along with almost everything about the way it works, is subject to change.)

## Background

This platform began as a simple [WordPress](https://wordpress.org/) website for one of Tufts University's earliest makerspaces, Jumbo's Maker Studio, in mid-2014. As our needs, spaces, and makerspace-related research projects grew, so did the site. Eventually it became clear that WordPress was holding the site back, so an entirely new [Kirby](https://getkirby.com/)-based site was built from scratch and structured in such a way that it could be customized and extended easily. That brings us to today.

You can see the Network being used in 3 places:

1. [maker.tufts.edu](https://maker.tufts.edu/) is the intended home of the Maker Network at Tufts University. It is search-indexable by Google and others, and is hosted on Tufts' servers.
2. [makernetwork.org](https://makernetwork.org/) is a constantly-changing "beta" site that Andy uses for development. You will frequently encounter broken pages and weird issues here. The server it runs on is owned by Andy.
3. [tuftsmake.com](https://tuftsmake.com/projects) is a slightly stripped-down but "stable" site that is being tested by students within the Mechanical Engineering department. This site is also hosted on Andy's server to provide quicker tech support and fixes.

For more information on the Network's feature set, the history of the project, or the many design decisions made during its development, check out the [Maker Network project page](https://makernetwork.org/projects/maker-network).

(link: https://makernetwork.org/projects/maker-network)










If you've never used Kirby before, I highly recommend looking at the following:

- [Kirby's (excellent) documentation](https://getkirby.com/docs)
- [Kirby's (also excellent) forum](https://forum.getkirby.com/)

If you're trying to develop something new, Kirby's [Cheat Sheet](https://getkirby.com/docs/cheatsheet) will help you figure out which methods to use in order to manipulate content, pages, and field data. I almost always have it handy while developing.





## Installation

Since the site doesn't use an SQL database, installation is as straightforward as copying all of the files to a web server's public directory and visiting site's URL in a web browser. Eventually an initial setup wizard will help the first user create an "admin" account, upload a logo, configure default settings, add their Google Analytics tracking code, and more. Until then, a code-savvy developer needs to keep reading.

Visit the [Network GitHub repository](https://github.com/andybraren/network\) to view the codebase. Some plugins and external components haven't been added to the repository yet, so certain parts of the site will break.

### Requirements

In addition to [Kirby's requirements](https://getkirby.com/docs/installation/download) (Apache, PHP, and mbstring), your server's Apache settings may also need to be tweaked. [Extending the session duration](https://forum.getkirby.com/t/prolong-login-time/4401) (so that users aren't logged out too frequently) and boosting PHP's allotted RAM are recommended.

## Site structure

### assets

(image: folder-assets.png size: medium)

The assets folder contains all of the supplementary CSS/JS code, fonts, and images that are used throughout the site (like the logo). It also contains an `avatars` folder with the unmodified profile photos of every user.

### content

(image: folder-content.png size: medium)

This is where all of the public pages that make up the site live. The `about` folder contains everything that generates the [about page](https://makernetwork.org/about), `projects` for the [projects page](https://makernetwork.org/projects), `handbooks` for [handbooks](https://makernetwork.org/handbooks), and so on. The name of the folder determines its public-facing URL.

Inside each folder is a ".txt" file that contains all of the information necessary to generate the page. The name of the file is typically used to determine which template is used to process its contents, but in the Network's case the names are arbitrary for now (templates are determined by the file's location instead).

### kirby

This is where Kirby's system files are stored. Kirby updates can be applied simply by replacing this folder with the new one.

### site

(image: folder-site.png size: medium)

As a developer, this is where you'll be working most of the time. All of the PHP that makes the site work is contained within this folder.

`accounts` contains each user's preferences and information.

`cache` is where Kirby stores the HTML files it generates if caching is turned on. Eventually I'll turn this on to make the entire site even faster, but at the moment it breaks the ability to show logged-in users different information.

`config` is where Kirby's settings and server settings can be tweaked (like turning caching on/off).

`plugins` contains a few useful community-made additions, along with the code that runs the Network's API and custom functions/methods that I've written.

`snippets` are small, reusable parts of the site that would be repetitive to include in every single page template. Code files for the main navigation, footer, and content cards are found here.

`tags` are like WordPress shortcodes that take something simple (like a YouTube URL) and run logic to replace it with something fancy (like the HTML for an embedded YouTube player). Image tags like `image: hello.jpg` are what create the responsive images in the main content area of every project page, for example.

`templates` determine the HTML that's generated for a ".txt" file, based on its name. The home directory's "home.txt" file is processed by the `home.php` template, for example. All others are processed by the `default.php` template I've created.

### thumbs

This is where Kirby stores all of the resized images that our templates, snippets, and tags ask for. For the most part this directory takes care of itself, but can become bloated over time with thumbnails for images that are no longer being used. I have plans to make cleanup of this folder more automatic without resorting to server daemons that have to be configured.

### index.php, license.md, and readme.md

The index file loads up Kirby when the site is called upon, just like WordPress. You can add logic to this file if something needs to be processed before Kirby gets loaded, but that's best to avoid.

The readme file contains some information about the platform and a link to this documentation. The license file contains Kirby's terms of use. Kirby requires you to [buy a license](https://getkirby.com/buy) for each individual site that you build (each unique hostname).

## Storing and retrieving data

### Site data

All site-related information (the name of the site, Google Analytics ID, API keys, color scheme, etc.) is located within `/content/site.txt`.

    Title: Tufts Maker Network
    ----
    Description: All of Tufts' making-related spaces, events, groups, projects, and resources.
    ----
    Copyright: Â© 2014-(date: Year)
    ----
    ColorOptions: blue, red, green, purple, orange, silver, gold
    ----
    VisibilityOptions: public, unlisted, groups, private
    ----
    UserTypes: user, admin
    ----
    GroupTypes: (TBD)
    ----
    AffiliationOptions: Undergraduate, Graduate (Masters) , Graduate (PhD), Faculty, Staff, Community member, None
    ----
    DepartmentOptions: (TBD)
    ----
    MajorOptions: Biology, Chemistry, English, Psychology
    ----
    GoogleAnalytics: UA-########-1
    ----
    APIKeys: ###############, ###############

(callout: notice text: Please note that some of these fields will likely be removed from site.txt and placed elsewhere. Again, this is all actively being developed.)

The color and visibility fields determine the choices that users have when choosing a page's color scheme or visibility setting. Deleting "purple" from this list of options will prevent users from making purple pages, for example. Deleting "public" will prevent users from being able to make pages that can be viewed by anyone without an account.

UserTypes, of which there are only two at the moment, determine a user's access level. Admins can see and edit every page within the site. Basic users can only edit pages in which they're listed as an author/writer. In the future an "editor" type might be added, allowing teachers to edit or add to their student's work, or privately assign them grades that only the two of them can see.

AffiliationOptions, DepartmentOptions, and MajorOptions determine the options that are available within the signup form.

The Google Analytics ID for the site is also stored here, along with any API keys from the RFID system.

### Page data

Recall that within each page's folder is a .txt file that contains all of the information used by the page. Typically each "field" within that file (delineated by `----`) specifies just one piece of information, as shown in [Kirby's example](https://getkirby.com/docs/content/adding-content#text-files):

    Title: About us
    ----
    Intro: This is some intro text
    ----
    Text: This is the text for the about page

Given that 29+ possible bits of information need to be contained within the Network's .txt files, however, I decided to combine related fields and use a set of [custom page methods](https://getkirby.com/docs/developer-guide/objects/page) to make storing & retrieving page information easier and more compact.

Below is every possible field within a Network .txt file.

    Title: The page title
    ----
    DateData: 2016-01-12 13:59:00, 2016-01-12 13:59:45 == abraren, 2016-01-12 13:59:30, 2016-01-25 10:00:00, 2016-01-25 11:00:00
              date created         date modified (and by whom)     date published       event start date     event end date
    ----
    UserData: abraren ~ Web Guy, crogers ~ Advisor /// drewbaren ~ Old Web Guy, jschmoe99 ~ Old advisor /// abraren, jschmoe /// subscriber@gmail.com, another@junkmail.biz /// imregistered, metoo24, measwell /// iattended, metoo24, measwell /// canijointhisgroup95, metoo24
              active authors                           inactive/retired authors                             subscribed users     email subscribers                              event registrants                   event attendees                  membership requests
    ----
    RelData: tufts-make, ultimaker-2 /// Twitter == https://twitter.com && Facebook == https://facebook.com /// biology, creative, copper /// abraren, drewbaren /// jschmoe99, ilikeeverything
             related "internal" pages    "external" links                                                       subjects / tags / materials   "likes"            /// "votes"
    ----
    Settings: public, red, comments == off, submissions == off, price == off
    ----
    Hero: cute-puppies-omg.jpg
    ----
    Location: Eaton Hall, Medford MA 02155
    ----
    Hours: 12:00 04:00 09:00 04:00 09:00 04:00 09:00 04:00 09:00 04:00 09:00 18:00 10:00 17:00 ~ The hours above are subject to [Tufts' calendar](https://it.tufts.edu/qs-eatonhours)
    ----
    Text: This is the text that will be displayed within the page.

#### Retrieving page data

Consider the below to be an extension of [Kirby's Cheat Sheet](https://getkirby.com/docs/cheatsheet). You can use these methods to `echo` or manipulate the information stored within each page's .txt file.

##### DateData

`$page->dateCreated()` - the date a page was first created
`$page->dateModified()` - the most recent date the page was modified
`$page->modifiedBy()` - the username who last modified the page
`$page->datePublished()` - the date the page was first made non-private
`$page->dateStart()` - the start day and time of an event
`$page->dateEnd()` - the end day and time of an event

##### UserData

`$page->authors()` - returns an array of active author usernames (with roles separated by ~)
`$page->oldauthors()` - returns an array of old/retired author usernames (with roles separated by ~)
`$page->subscribers()` - returns an array of subscribed usernames
`$page->subscriberEmails()` - returns an array of subscribed (non-user) email addresses
`$page->registrants()` - returns an array of event registrants
`$page->attendees()` - returns an array of event attendees
`$page->requests()` - returns an array of usernames who've asked to join an event/group

##### RelData

`$page->related()` - returns an array of all related "internal" pages
`$page->relatedGroups()` - returns an array of related "group" pages only
`$page->relatedProjects()` - returns an array of related "project" pages only
`$page->relatedEvents()` - returns a collection of related "project" pages only
`$page->links()` - returns an array of titled external links
`$page->tags()` - returns an array of tags
`$page->likes()` - returns an array of usernames who "liked" the page
`$page->votes()` - returns an array of usernames who voted for the page

##### Settings

`$page->visibility()` - returns the page's visibility
`$page->color()` - returns the page's color
`$page->isVisibleToUser()` - (T/F) whether the page is visible to the visitor
`$page->isEditableByUser()` - (T/F) whether the logged-in user has permission to edit the page
`$page->comments()` - (coming) returns an array of the page's comments (if the setting is turned on)
`$page->submissions()` - (coming) returns an array of the page's submissions (if the setting is turned on)
`$page->price()` - returns the event/page's price
`$page->status()` - (coming) returns the equipment/page's current maintenance status

##### Hero

`$page->heroImage()` - returns the first hero image (or first image) of a page
`$page->heroImages()` - returns a collection of the page's hero images

##### Permissions

`$page->isVisibleToUser()` - true or false, whether the page should be shown to the visitor
`$page->isEditableByUser()` - true or false, whether the logged-in user has permission to edit the page

### Group data

`$site->page('groups/tufts-make')->groupLogo()` - Returns the group's logo url or a default one
`$site->page('groups/tufts-make')->groupColor()` - Returns the group's color

### User data

    Sample file: jschmo.php
    -----
    username: jschmo
    firstname: Joe
    lastname: Schmo
    email: jschmo@gmail.com
    tuftsemail: joe.schmo@tufts.edu
    password: [Encrypted password here]
    datedata: 2015-05-06 15:00:00, 2015-07-23 11:57:59 == jschmo
              date registered      date last modified
    language: en
    usertype: admin
    color: red
    affiliation: Graduate (Masters)
    department: Mechanical Engineering
    major: Human Factors
    classyear: 2015
    birthyear: 1993
    groups: tufts-make, me-184-robotics
    purchases: gift-basket == 2016-10-23 13:00:00, membership == 2016-10-26 13:51:57 - 2017-10-26 13:51:57
               item name      purchase date/time                                       expiration date/time

`$site->user('jschmo')->dateRegistered()` - returns whether the user has paid for an item
`$site->user('jschmo')->dateModified()` - returns the date of the most recent modification
`$site->user('jschmo')->modifiedBy()` - returns the most recent modifier

`$site->user('jschmo')->purchased($page->slug())` - returns whether the user has paid for an item
`$site->user('jschmo')->purchasedate($page->slug())` - returns the date the user purchased an item
`$site->user('jschmo')->purchaseexpire($page->slug())` - returns the date the user's purchase will expire
`$site->user('jschmoe')->userAvatar()` - returns the URL of either the user's uploaded avatar or a default avatar
`$site->user('jschmoe')->userColor()` - returns the user's favorite color

### Pages data

`$pages->visibleToUser()` - (T/F) whether the logged-in user has permission to edit the page

## Inline editing

(video: https://www.youtube.com/watch?v=Ocx_pznD-VQ caption: A tech preview of inline editing recorded in September 2016)

Like Facebook, Medium, Twitter, and so many other popular web applications, the Network allows users to directly manipulate page content rather than learn how to use a "backend" administrative interface like WordPress.

To do this, the site currently uses a library called [ContentTools](http://getcontenttools.com/). ContentTools is one of many WYSIWYG content editors that utilize the `contentEditable` HTML attribute to allow users to change text directly within the page itself. Once initiated, it latches on to any elements with the `data-editable` attribute and makes them editable using its handy tool palette. It also uses the element's `data-name` attribute to keep track of which region is what.

The code for Contenttools is contained within `/assets/js/contenttools`. The click binding that initiates it is located within `/assets/js/main.js`. The `editor.js` file within the `contenttools` folder contains the many customizations and tweaks I've made to get it working properly with the Network.

When the user clicks the "Save" button, ContentTools packages up every `data-editable` region that has been changed and POSTs the HTML to `../save` so that server-side code located within `/config/config.php` can handle saving the changes to the page's `.txt` file.

ContentTools definitely has its quirks and doesn't work particularly well on mobile, so it will likely be replaced with something lighter and more tightly integrated in the future.

### Choosing a library

There are a ton of JavaScript WYSIWYG editors out there - here's a pretty [comprehensive list](https://github.com/cheeaun/mooeditable/wiki/Javascript-WYSIWYG-editors). Choosing one has been difficult.

Currently the Network uses ContentTools, but soon I'll be attempting to switch to using Quill instead, which is what [telegra.ph](http://telegra.ph/) uses to great effect.

## API

The Network has a public JSON API that can be used by other applications to gather public information about makers and groups within the Maker community. Eventually, equipment pages and spaces will be included in this API as well.

### Users API

    GET /api?users=all
    GET /api?users=abraren

This will return a JSON array containing the public information available for all users, or just one.

### Groups API

    GET /api?groups=all
    GET /api?groups=tufts-make

This will return a JSON array containing the public information available for all groups, or just one.

## Releases

### v0.0 - September 1, 2015

- WordPress-based site containing handbooks, some event pages, and maker profiles

### v0.1 - October 1, 2015

- Initial switch to Kirby
- Migrated handbooks

### v0.2 - January 6, 2016

- Password reset
- RFID connection
- Space pages

### v0.3 - April 1, 2016

- Theme colors
- Table of Contents
- Lazy-loading images and videos

### v0.4 - May 1, 2016

- Site-wide login and signup
- Image uploading

### v0.5 - October 4, 2016

- Inline editing
- Page authors (add/remove authors who can edit the page)
- Page visibility setting
    + Public - visible to the world
    + Unlisted - visible to anyone with the URL, not displayed within site, hidden from Google
    + Groups - visible only to designated groups/classes
    + Private - hidden from everyone except yourself and designated authors
- Page color setting
- Hero image upload

### v0.6

- Created [GitHub repository](https://github.com/andybraren/acorn)
- File uploading
- Log in with email address (not just username)
- Night mode
- Dyslexia font
- Font size adjustment
- Improved client-side security with Mozilla Web Observatory
- Mobile access to TOC
- [gzipped](https://forum.getkirby.com/t/an-elegant-way-to-serve-gzipped-html/2546) HTML
- Resource caching

- Menu editor

- Submenu support
- Form validity
- Extend session time


## Roadmap

### v0.7 - May 1, 2017

Pre-alpha. Frontend site creation.

### v0.8 - June 1, 2017

Alpha. Basic features complete.

### v0.9 - July 1, 2017

Beta. Commerce features. Downloading CSV.

### v1.0 -September 1, 2017

Launch. Updating system. Reliable page.txt upgrade path.

### vx.x - Future

- Accounts
    + Pre-registration
        * Allow a site admin to pre-register a group of email addresses as being part of a group. When those email addresses register, they will automatically be a member of certain group pages, allowing them to view that content.
        * This would also allow those accounts to have certain other privileges, like being a "teacher" account or something.
- Tags
    + Allow certain types of pages (posts, articles, videos, photos, etc.) to be taggable. Tags are displayed in the sidebar.
    + Tag pages
        * Tag pages collect every page containing a given tag. Pages can then be sorted by type. This allows a user to quickly and easily find every video related to 3D printing, for example, without the website owner having to create a category for that page.
        * Tag pages are seamlessly at website.com/tag:3d-printing
- CDN
    + Turn on via settings
- Google Analytics
    + Add key within Settings page
    + Per-post statistic embeds
        * Figure out if it would be possible to display per-post analytics either using Google's API or just using server logs somehow, and how to make that data portable and hopefully local.
- Layout Settings
    + Header
        * Tall, with ad spot
    + Boxed vs Full
- In-page tabs
    + http://youmightnotneedjs.com/#tabs
    + [Mobile styling](https://scotch.io/tutorials/building-a-morphing-hamburger-menu-with-css)
- Clearer form validity
    + See [here](https://bitsofco.de/realtime-form-validation/), [here](https://baymard.com/blog/inline-form-validation), and [here](http://tympanus.net/Development/SelectInspiration/index.html)
- Commerce
    + Stripe integration
    + Crowdfunding
        * Goals, no charge until reached, etc.
    + Memberships
- Ads
    + Ad board, similar to [Overcast](https://overcast.fm/account/buy_ad), for native advertising, with manual image uploads
    + https://sortable.com/
    + http://www.adthrive.com
- PJAX page transitions
    + Replace the page's content while keeping all cached resources to improve perceived performance to visitors with JavaScript enabled.
        * [Barba.js](http://barbajs.org/index.html) and [discussion](https://www.reddit.com/r/web_design/comments/4m9ie4/barbajs_create_smooth_transition_between_your/)
        * [smoothState.js](https://github.com/miguel-perez/smoothState.js) is another (fancier) option
        * Page [transition effect](https://kasper.io/How-to-create-transition-effect-between-pages/)
        * [Check if page is open](https://forum.getkirby.com/t/checking-page-isopen-via-javascript/5299)
- Social media sharing icons
    + Placed near bottom of article
- Call to action / tip jar
    + Customizable text via settings
    + Display on certain posts types
        * "Display on articles, posts, and events written by anyone"
- Scheduled posts
    + https://blog.ghost.org/scheduled-posts/
- Page revisions / "Time Machine"
    + Settings: On (for every edit), Automatic (for substantial edits), Off by default, Never (don't display the option on pages)
    + Automatic archive of a page's major updates, determined by the amount of text that changes
    + Allow the reader to browse revisions
    + Revisions can only be deleted, and not edited, for posterity
    + [Kirby plugin already available](https://forum.getkirby.com/t/kirby-revisions/3874)
- Site-wide newsletter
    + Upcoming events, recent posts, recent projects, recent revisions
    + Allow the admin to set distribution frequency and included sections
    + Automatically store sent newsletters within an archive
        * Allow the admin to add a preamble and tweak the content prior to its release
- Placeholder-less lazy loading
    + To reduce network requests and initial page weight, remove small placeholder/thumbnail images. [Example behavior](http://www.epicurious.com/).
    + Could maybe replace with color gradients? Seems to be a feature of ImageKit.
    + http://blog.dynamicdrive.com/5-brilliant-ways-to-lazy-load-images-for-faster-page-loads/
- Image galleries
    + Allow the user to upload multiple image files at once, creating a gallery of thumbnails
    + Caption support, delete one image, add more images
    + Enable reordering with something like [Packery](http://packery.metafizzy.co/)
- File replacement
    + Dragging and dropping, or manually uploading, any file onto the main body with the exact same filename should display a message and allow the user to replace all old instances of that file
- Hero
    + Video support
        * YouTube, Vimeo, or MP4
        * Allow the user to manually upload a teaser image for the hero video
    + Editor
        * Multiple hero iimages
        * Add image text
        * [Accessible carousel](https://github.com/estelle/merry-go-round)
    + Guidance
        * Warnings for small images and large video files.
        * [Tooltips](https://github.com/eliortabeka/tootik)
- Image captions
    + Use JS to add a span below images. Have the span's content update data-caption of the image, which is then passed to the text file as the image's caption.
- Messaging system
    + Allow users to initiate private one-to-one or small group chats. This will require live-updating of a comment-like chat thread via WebSockets or something.
    + Group mailing lists
        * Stored as posts, with the ability to comment below, kind of like an email thread
- Notifications system
    + Customizable email/webapp notifications with badge
    + Subscribe to page revisions and comment/forum threads
- Profiles
    + Messaging (in-site and/or via email)
        * Allow users to opt-in to receiving messages from other community members.
- RSS Feeds
    + A ton of possible feeds. All, discussions, posts-only, page revisions, etc.
- Automatic image cleanup
    + On page save, any files that aren't included within the updated page.txt are either moved to the previous page revision or deleted
- Events
    + "Event" page type
    + Calendar
        * Filtering options
        * Google Calendar subscriptions
    + Ticketing
        * "Get in line" feature
    + Facebook event importer (manual and refresh)
        * [Example plugin](https://wordpress.org/plugins/facebook-events-importer/)
- Places
    + "Place" page type
    + Address, hours, staff directory
    + Hours
        * Default weekly hours with manual override (using a calendar view?)
    + Bookings (Reservation system)
        * Book by station
        * Book by hour
        * https://eventsmanagerpro.com
- Equipment
    + Reservation system (see above)
- Private profiles
    + Add [robots noindex](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag) to profile page header
    + Use [HTML obfuscation](http://stackoverflow.com/questions/4818766/any-simple-obfuscator-of-html-code-generated-by-php) for their name on other pages
- Profile export
    + Allow users to export their profile page and all of their content as either raw HTML or a new Acorn instance
    + See backup idea [here](https://forum.getkirby.com/t/custom-field-backup-all-your-content-with-just-one-click/2307)
- Allow admins to edit user information
    + Change username, password, email, and any other info
- Settings
- Widgets
    + GitHub widget
        * Display GitHub activity within the sidebar of a page, potentially useful for code project pages
        * [Example plugin](https://github.com/surbhioberoi/github-widget/blob/master/README.md)
        * [API output](https://api.github.com/users/andybraren)
    + Quiz widget
    + Polls
        * Similar to strawpoll or pollmaker
        * With duplication checking (accounts, cookies, and IP address (?))
- Code highlighting
    + prism.js, highlight.js, or server-side styling
- Custom fonts
    + First learn about best method for loading external fonts ([here](https://bitsofco.de/the-new-system-font-stack/))
- Gravatar support
    + Option within user's settings page
    + [Download](https://gist.github.com/samundra/7819411) avatars periodically for more control
- Webapps
    + "Dash" app
        * Inter-space telepresence via WebRTC
    + "Station" app
        * Automatic 
    + "Capture" app
        * Project documentation
        * Available as a bookmarklet too
            - Create a new post, or add it to an existing page they have editing permissions to via a search field and recents localStorage
    + See [here](https://tympanus.net/codrops/2014/03/21/responsive-full-width-tabs/) for responsive full-width tabs, and [here](https://tympanus.net/codrops/2014/09/02/tab-styles-inspiration/) for tab styles
- API
- Acorn pod
    + In-space documentation
- "Wiki" page type
    + Like [Piazza](https://piazza.com)?
- Forums
    + Q&A [Stack Overflow style](https://discuss.flarum.org/d/3868-select-post-best-answer)
- Reading Enhancements
    + Bookmarks
        * For long, book-length pages, use localStorage)
- Podcasts
    + Transcriptions
    + Timestamps
    + Listing on iTunes
- Real-time collaboration
    + Like Google Docs
    + [DiffSync](http://janmonschke.com/projects/diffsync.html)
    + [Other tools](https://blogory.org/private/1/other/softwareengineering/javascript/collaborative-editing-in-javascript/javascript-collaborative-editing-tools)
- Auto-import and export
    + Medium, Tumblr, WordPress, Instagram
    + YouTube
        * https://wordpress.org/plugins/automatic-youtube-video-posts/faq/
    + Twitter
        * https://forum.getkirby.com/t/twitter-integration-with-full-control-cache-mechanism-and-oauth/2344
        * http://blog.oneduality.com/2013/06/26/how-to-get-a-twitter-feed-using-php-without-using-api-1-1-and-without-oauth/
        * https://github.com/cosmocatalano/tweet-2-json
- Style editor (?)
    + What if the style editor were an editable style guide?
    + https://wordpress.com/design-handbook/colors/
    + http://demo.patternlab.io/
    + https://tympanus.net/Development/InteractiveColoringConcept/
- Link snapshots
    + Store a copy of a linked website's page in case it ever 404's
    + Similar to Web Archive or Pinboard, this would automatically download and store an optimized (or original?) version of the linked-to web page in case the original link ever goes down.
    + https://mercury.postlight.com/web-parser/
    + The link would be stored in a folder. Each night a cron job triggers a check of every link post for 404's. If one is detected, an "archived" bit is flipped in the page.txt's to change the href to be the local copy.
- Bugs and Tiny Things
    + If two headings within a page are exactly the same, anchor navigation breaks
        * This could either be solved relationally, using the previous heading as a reference, or numerically, by appending a number to each duplicate ID. Numerically seems to be the better approach, given that a previous heading isn't always guaranteed.
    + Toggle showing passwords ([context](http://allthingssmitty.com/2016/10/24/show-my-password-please/))
    + Fix Chrome omnibox ([here](http://stackoverflow.com/questions/7630144/how-to-add-google-chrome-omnibox-search-support-for-your-site))
    + 














































